FUNCTION CNV_2010C_FILL_BAPIRET2 . *"---------------------------------------------------------------------- *"*"Local Interface: *"  IMPORTING *"     VALUE(TYPE) LIKE  BAPIRETURN-TYPE *"     VALUE(CL) LIKE  SY-MSGID *"     VALUE(NUMBER) LIKE  SY-MSGNO *"     VALUE(PAR1) LIKE  SY-MSGV1 DEFAULT SPACE *"     VALUE(PAR2) LIKE  SY-MSGV2 DEFAULT SPACE *"     VALUE(PAR3) LIKE  SY-MSGV3 DEFAULT SPACE *"     VALUE(PAR4) LIKE  SY-MSGV4 DEFAULT SPACE *"     VALUE(LOG_NO) LIKE  BAPIRETURN-LOG_NO DEFAULT SPACE *"     VALUE(LOG_MSG_NO) LIKE  BAPIRETURN-LOG_MSG_NO DEFAULT SPACE *"     VALUE(PARAMETER) LIKE  BAPIRET2-PARAMETER DEFAULT SPACE *"     VALUE(ROW) LIKE  BAPIRET2-ROW DEFAULT 0 *"     VALUE(FIELD) LIKE  BAPIRET2-FIELD DEFAULT SPACE *"  EXPORTING *"     REFERENCE(RETURN) LIKE  BAPIRET2 STRUCTURE  BAPIRET2 *"---------------------------------------------------------------------- ****** Copied from  BALW_BAPIRETURN_GET2 and BCA_API_BAPIRET2_FILL ***** ****** Copied from FS_BAPI_BAPIRET2_FILL **----------------------------------------------------------------------   TABLES: t100.   CLEAR return. * process field return-type.   return-type = type. * process field id, number   return-id = cl.   return-number = number. * process message variables   return-message_v1 = par1.   return-message_v2 = par2.   return-message_v3 = par3.   return-message_v4 = par4. * Field description   return-parameter = parameter.   return-row       = row.   return-field     = field. * logical system-id   CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET_STABLE'     IMPORTING       own_logical_system = return-system. *============================================================ * the ABAP command message ... into support only the standard * message types (A,E,I,W,S,X) no other types are supported   MESSAGE ID     cl           TYPE   type           NUMBER number           WITH   par1                  par2                  par3                  par4           INTO   return-message. *============================================================= * process field return log_no   return-log_no = log_no. * process field return LOG_MSG_NO   return-log_msg_no = log_msg_no. ENDFUNCTION. and FUNCTION cnv_2010c_get_domain_fixed_val. *"---------------------------------------------------------------------- *"*"Local Interface: *"  IMPORTING *"     VALUE(IV_DOMNAME) TYPE  DOMNAME *"  EXPORTING *"     VALUE(EV_DOMNAME) TYPE  DOMNAME *"  TABLES *"      ET_DOMAIN_FIXED_VAL TYPE  CNV_2010C_T_DOMAIN_FIXED_VALUE *"       OPTIONAL *"      RETURN STRUCTURE  BAPIRET2 OPTIONAL *"---------------------------------------------------------------------- * Data Decleration   DATA ls_bapi_ret TYPE bapiret2. * Check if iv_domname is empty   IF iv_domname IS INITIAL. *   fill bapiret2     CALL FUNCTION 'CNV_2010C_FILL_BAPIRET2'       EXPORTING         type   = 'E'         cl     = 'CNV_2010C'         number = '000'       IMPORTING         return = ls_bapi_ret.     ls_bapi_ret-message = text-012.     APPEND ls_bapi_ret TO return.     RETURN.   ENDIF. * Select data from table DD07T   SELECT ddlanguage valpos domvalue_l ddtext     FROM dd07t INTO CORRESPONDING FIELDS OF TABLE et_domain_fixed_val     WHERE domname = iv_domname AND ddlanguage EQ sy-langu AND as4local EQ 'A'.   IF sy-subrc EQ 0.     SORT et_domain_fixed_val ASCENDING BY valpos.     ev_domname = iv_domname.   ELSE. * Select data from table DD07T for langu eq EN     SELECT ddlanguage valpos domvalue_l ddtext       FROM dd07t INTO CORRESPONDING FIELDS OF TABLE et_domain_fixed_val       WHERE domname = iv_domname AND ddlanguage EQ 'E' AND as4local EQ 'A'.     IF sy-subrc EQ 0 .       SORT et_domain_fixed_val ASCENDING BY valpos.       ev_domname = iv_domname.     ELSE. *   fill bapiret2       CALL FUNCTION 'CNV_2010C_FILL_BAPIRET2'         EXPORTING           type   = 'E'           cl     = 'CNV_2010C'           number = '000'         IMPORTING           return = ls_bapi_ret.       ls_bapi_ret-message = text-013.       APPEND ls_bapi_ret TO return.     ENDIF.   ENDIF. ENDFUNCTION.
